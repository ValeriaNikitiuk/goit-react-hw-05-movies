{"version":3,"file":"static/js/936.81566c11.chunk.js","mappings":"8PAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAa,mCAAG,sGACJD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAW,mCAAG,WAAMC,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADE,uBACjBF,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOXG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACEP,EADF,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,sJClB9B,EAAwB,oBAAxB,EAAyD,yBAAzD,EAA8F,wBAA9F,EAAwI,8B,SCmDxI,EA9Ca,WACX,OAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE8BT,EAAAA,EAAAA,MAF9B,iBAEYU,EAFZ,EAEYA,SACM,GACZC,IAAAA,OAAAA,QAAwB,2CAE1BH,EAAaE,GANjB,gDAQIC,IAAAA,OAAAA,QAAwB,wBAR5B,0DADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,KAGD,4BACE,eAAIC,UAAWC,EAAf,8BACA,eAAID,UAAWC,EAAf,SACGP,EAAUQ,KAAI,SAAAC,GACb,IAAIC,EAOJ,OALEA,EADED,EAAME,YACE,0CAAsCF,EAAME,aAGpD,wGAGF,UAAC,KAAD,CACEL,UAAWC,EAEXK,GAAE,kBAAaH,EAAMX,IAHvB,WAKE,gBAAKe,IAAKH,EAAYI,MAAM,MAAMC,IAAKN,EAAMO,SAC7C,eAAIV,UAAWC,EAAf,SAAmCE,EAAMO,UAJpCP,EAAMX,GAOhB,QAIR,C","sources":["api/apiFetch.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9cca312caffd11f4ae9f11244d585025';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearch = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await axios.get(\n    `/movie${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieRewviews = async id => {\n  const { data } = await axios.get(\n    `/movie${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\",\"home_cards\":\"Home_home_cards__BX7oy\",\"homeItems\":\"Home_homeItems__-V5kz\",\"homeItems_title\":\"Home_homeItems_title__7nz4Q\"};","import { useState, useEffect } from 'react';\nimport { fetchTrending } from 'api/apiFetch';\nimport Notiflix from 'notiflix';\nimport { Link } from 'react-router-dom';\nimport s from './Home.module.css';\n\nconst Home = () => {\n  const [trendings, setTrendings] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const { results } = await fetchTrending();\n        if (results < 1) {\n          Notiflix.Notify.warning('not possible to find , please try again');\n        }\n        setTrendings(results);\n      } catch {\n        Notiflix.Notify.warning('Something went wrong');\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1 className={s.title}> Trending today</h1>\n      <ul className={s.home_cards}>\n        {trendings.map(movie => {\n          let posterPath;\n          if (movie.poster_path) {\n            posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n          } else {\n            posterPath =\n              'https://flora.dobro-est.com/tradeskantsiya-tradescantia-opisanie-vidyi-i-uhod-za-tradeskantsiey.html';\n          }\n          return (\n            <Link\n              className={s.homeItems}\n              key={movie.id}\n              to={`/movies/${movie.id}`}\n            >\n              <img src={posterPath} width=\"400\" alt={movie.title} />\n              <h2 className={s.homeItems_title}>{movie.title}</h2>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","fetchTrending","data","fetchSearch","query","fetchMovieDetails","id","useState","trendings","setTrendings","useEffect","results","Notiflix","fetchMovies","className","s","map","movie","posterPath","poster_path","to","src","width","alt","title"],"sourceRoot":""}