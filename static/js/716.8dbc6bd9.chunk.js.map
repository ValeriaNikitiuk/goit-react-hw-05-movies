{"version":3,"file":"static/js/716.8dbc6bd9.chunk.js","mappings":"8PAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAa,mCAAG,sGACJD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAW,mCAAG,WAAMC,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADE,uBACjBF,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOXG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACEP,EADF,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,8ICjBjBK,EAAc,SAAC,GAAe,IAGrCC,EAHwBC,EAAY,EAAZA,MACpBC,EAAwDD,EAAxDC,MAAOC,EAAiDF,EAAjDE,aAAcC,EAAmCH,EAAnCG,OAAQC,EAA2BJ,EAA3BI,SAAUC,EAAiBL,EAAjBK,aAQ/C,OAJEN,EADEC,EAAMM,YACE,0CAAsCN,EAAMM,aAE5C,kFAGV,4BACE,gBAAKC,GAAIR,EAAYS,IAAKP,KAC1B,4BACE,8BACIA,EADJ,KACa,IAAIQ,KAAKP,GAAcQ,cADpC,QAGA,yCAAiBC,KAAKC,MAAqB,GAAfP,GAA5B,QACA,sCACA,uBAAID,KACJ,oCACA,6BAAKD,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAIjD,E,QC0BD,EA9CqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAcoB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAQ,oBAAGR,EAASS,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAczC,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEMjC,EAAAA,EAAAA,IAAkB2B,GAFxB,OAETO,EAFS,OAGfV,EAASU,GAHM,gDAKfR,EAAS,EAAD,IALO,yDAAH,qDAQhBO,GACD,GAAE,CAACN,KAGF,iCACE,4BACE,0BACE,SAAC,KAAD,CAAMQ,GAAIN,EAAV,sCAEDJ,IAAS,6CACTrB,IACC,4BACE,SAACF,EAAD,CAAaE,MAAOA,KACpB,oDACA,SAAC,KAAD,CAAS+B,GAAI,OAAQL,MAAOT,EAASS,MAArC,mBAGA,SAAC,KAAD,CAASK,GAAI,OAAQL,MAAOT,EAASS,MAArC,4BAMN,SAAC,EAAAM,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/apiFetch.jsx","components/DetailsCard/DetailsCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9cca312caffd11f4ae9f11244d585025';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearch = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await axios.get(\n    `/movie${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieRewviews = async id => {\n  const { data } = await axios.get(\n    `/movie${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import PropTypes from 'prop-types';\n\nexport const DetailsCard = ({ movie }) => {\n  const { title, release_date, genres, overview, vote_average } = movie;\n\n  let posterPath;\n  if (movie.poster_path) {\n    posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n  } else {\n    posterPath = `https://r6z4d5g2.rocketcdn.me/wp-content/uploads/2015/08/mac-fix-dont-load.jpg`;\n  }\n  return (\n    <div>\n      <img rc={posterPath} alt={title} />\n      <div>\n        <h2>\n          \"{title}\"({new Date(release_date).getFullYear()})\n        </h2>\n        <p> User Score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p> {genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n    </div>\n  );\n};\nDetailsCard.propTypes = {\n  movie: PropTypes.shape({\n    oster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\n// export default DetailsCard;\n","import { fetchMovieDetails } from '../../api/apiFetch';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { DetailsCard } from '../../components/DetailsCard/DetailsCard';\nimport { NavLink, Link } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const movieFetch = async () => {\n      try {\n        const result = await fetchMovieDetails(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    movieFetch();\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <div>\n          <Link to={backLink}> Return to all movies </Link>\n        </div>\n        {error && <div>Something wrong</div>}\n        {movie && (\n          <div>\n            <DetailsCard movie={movie} />\n            <h3> Additiona information</h3>\n            <NavLink to={'cast'} state={location.state}>\n              Cast\n            </NavLink>\n            <NavLink to={'cast'} state={location.state}>\n              Reviews\n            </NavLink>\n          </div>\n        )}\n      </div>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrending","data","fetchSearch","query","fetchMovieDetails","id","DetailsCard","posterPath","movie","title","release_date","genres","overview","vote_average","poster_path","rc","alt","Date","getFullYear","Math","round","map","genre","name","join","location","useLocation","useState","setMovie","error","setError","movieId","useParams","backLink","state","from","useEffect","movieFetch","result","to","Suspense","fallback"],"sourceRoot":""}