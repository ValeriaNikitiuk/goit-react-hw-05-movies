{"version":3,"file":"static/js/642.89dfae30.chunk.js","mappings":"sOAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAa,mCAAG,sGACJD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAW,mCAAG,WAAMC,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADE,uBACjBF,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD,uKCLXG,EAAS,WAAO,IAAD,EACpBC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCJ,EAAAA,EAAAA,YAAtC,eAAOK,EAAP,KAAoBC,EAApB,KACMC,EAAW,UAAGF,EAAYG,IAAI,iBAAnB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE8Bd,EAAAA,EAAAA,IAAYY,GAF1C,iBAEYG,EAFZ,EAEYA,SACIC,OAAS,GACnBC,IAAAA,OAAAA,QAAwB,sCAE1BV,EAAUQ,GANd,gDAQIE,IAAAA,OAAAA,QAAwB,iCAR5B,0DAJc,sBACTL,GADS,mCAedM,EACD,GAAE,CAACN,IAYJ,OACE,iCACE,kBAAMO,SAZO,SAAAC,GACfA,EAAEC,iBACFV,EAAyB,KAAVH,EAAe,CAAEc,OAAQd,GAAU,CAAC,GACnDC,EAAS,GACV,EAQG,WACE,kBACEc,KAAK,OACLC,KAAK,QACLC,SAAU,SAAAL,GAAC,OAVIM,EAUeN,EAAEO,cAAcD,MAAME,mBAT1DnB,EAASiB,GADY,IAAAA,CAUJ,EACXA,MAAOlB,KAET,mBAAQe,KAAK,SAAb,uBAEDjB,IACC,wBACGA,EAAOuB,KAAI,SAAAC,GACV,IAAIC,EAOJ,OALEA,EADED,EAAME,YACE,0CAAsCF,EAAME,aAGpD,wGAGF,UAAC,KAAD,CAEEC,GAAE,UAAKH,EAAMI,IACbC,MAAO,CAAEC,KAAMjC,GAHjB,WAKE,gBAAKkC,IAAKN,EAAYO,MAAM,MAAMC,IAAKT,EAAMU,SAC7C,wBAAKV,EAAMU,UALNV,EAAMI,GAQhB,QAKV,C","sources":["api/apiFetch.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9cca312caffd11f4ae9f11244d585025';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearch = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await axios.get(\n    `/movie${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieRewviews = async id => {\n  const { data } = await axios.get(\n    `/movie${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSearch } from 'api/apiFetch';\n\nimport { Link } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nexport const Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [input, setInput] = useState('');\n  const [searchParam, setSearchParam] = useState();\n  const inputFilter = searchParam.get('filter') ?? '';\n\n  useEffect(() => {\n    if (!inputFilter) {\n      return;\n    }\n    async function fetch() {\n      try {\n        const { results } = await fetchSearch(inputFilter);\n        if (results.length < 1) {\n          Notiflix.Notify.warning(\"We can't find it, please try again\");\n        }\n        setMovies(results);\n      } catch (error) {\n        Notiflix.Notify.warning('Something wrong, later please');\n      }\n    }\n    fetch();\n  }, [inputFilter]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParam(input !== '' ? { filter: input } : {});\n    setInput('');\n  };\n\n  const onChangeSearch = value => {\n    setInput(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"input\"\n          onChange={e => onChangeSearch(e.currentTarget.value.toLowerCase())}\n          value={input}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            let posterPath;\n            if (movie.poster_path) {\n              posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n            } else {\n              posterPath =\n                'https://flora.dobro-est.com/tradeskantsiya-tradescantia-opisanie-vidyi-i-uhod-za-tradeskantsiey.html';\n            }\n            return (\n              <Link\n                key={movie.id}\n                to={`${movie.id}`}\n                state={{ from: location }}\n              >\n                <img src={posterPath} width=\"400\" alt={movie.title} />\n                <h2>{movie.title}</h2>\n              </Link>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n// export default Movies;\n"],"names":["API_KEY","axios","fetchTrending","data","fetchSearch","query","Movies","location","useLocation","useState","movies","setMovies","input","setInput","searchParam","setSearchParam","inputFilter","get","useEffect","results","length","Notiflix","fetch","onSubmit","e","preventDefault","filter","type","name","onChange","value","currentTarget","toLowerCase","map","movie","posterPath","poster_path","to","id","state","from","src","width","alt","title"],"sourceRoot":""}