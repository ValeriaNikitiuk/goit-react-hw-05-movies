{"version":3,"file":"static/js/881.f4077fa2.chunk.js","mappings":"8PACA,EAAyB,uBAAzB,EAAuD,qBAAvD,EAAyF,2BAAzF,EAAkI,4BAAlI,EAA2K,2BAA3K,EAAoN,4B,2BCoFpN,EA7Ee,WAAO,IAAD,EACbA,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQ,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,IAE7CC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE8BC,EAAAA,EAAAA,IAAYH,GAF1C,iBAEYI,EAFZ,EAEYA,SACIC,OAAS,GACnBC,IAAAA,OAAAA,QAAwB,sCAE1BZ,EAAUU,GANd,gDAQIE,IAAAA,OAAAA,QAAwB,iCAR5B,0DAJc,sBACTN,GADS,mCAedO,EACD,GAAE,CAACP,IAYJ,OACE,iCACE,kBAAMQ,UAAWC,EAAQC,SAZZ,SAAAC,GACfA,EAAEC,iBACFb,EAAyB,KAAVJ,EAAe,CAAEkB,MAAOlB,GAAU,CAAC,GAClDC,EAAS,GACV,EAQG,WACE,kBACEY,UAAWC,EACXK,YAAY,uBACZC,KAAK,OACLC,KAAK,QACLC,SAAU,SAAAN,GAAC,OAZIO,EAYeP,EAAEQ,cAAcD,MAAME,mBAX1DxB,EAASsB,GADY,IAAAA,CAYJ,EACXA,MAAOvB,KAET,mBAAQa,UAAWC,EAAcM,KAAK,SAAtC,uBAIDtB,IACC,eAAIe,UAAWC,EAAf,SACGhB,EAAO4B,KAAI,SAAAC,GACV,IAAIC,EAOJ,OALEA,EADED,EAAME,YACE,0CAAsCF,EAAME,aAGpD,kFAGF,UAAC,KAAD,CACEhB,UAAWC,EAEXgB,GAAE,UAAKH,EAAMI,IACbC,MAAO,CAAEC,KAAMtC,GAJjB,WAME,gBAAKuC,IAAKN,EAAYO,MAAM,MAAMC,IAAKT,EAAMU,SAC7C,eAAIxB,UAAWC,EAAf,SAA+Ba,EAAMU,UALhCV,EAAMI,GAQhB,QAKV,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Movies_search__VjLZn\",\"form\":\"Movies_form__4ow+Z\",\"search_btn\":\"Movies_search_btn__FHbHl\",\"movie_cards\":\"Movies_movie_cards__I50Y5\",\"movieItems\":\"Movies_movieItems__n3dRl\",\"movie_title\":\"Movies_movie_title__b5mVx\"};","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'api/apiFetch';\nimport s from './Movies.module.css';\n\nimport { Link } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [input, setInput] = useState('');\n  const [searchParam, setSearchParam] = useSearchParams();\n  const inputEle = searchParam.get('query') ?? '';\n\n  useEffect(() => {\n    if (!inputEle) {\n      return;\n    }\n    async function fetch() {\n      try {\n        const { results } = await fetchSearch(inputEle);\n        if (results.length < 1) {\n          Notiflix.Notify.warning(\"We can't find it, please try again\");\n        }\n        setMovies(results);\n      } catch (error) {\n        Notiflix.Notify.warning('Something wrong, later please');\n      }\n    }\n    fetch();\n  }, [inputEle]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParam(input !== '' ? { query: input } : {});\n    setInput('');\n  };\n\n  const onChangeSearch = value => {\n    setInput(value);\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={onSubmit}>\n        <input\n          className={s.search}\n          placeholder=\"enter a movie search\"\n          type=\"text\"\n          name=\"input\"\n          onChange={e => onChangeSearch(e.currentTarget.value.toLowerCase())}\n          value={input}\n        ></input>\n        <button className={s.search_btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {movies && (\n        <ul className={s.movie_cards}>\n          {movies.map(movie => {\n            let posterPath;\n            if (movie.poster_path) {\n              posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n            } else {\n              posterPath =\n                'https://r6z4d5g2.rocketcdn.me/wp-content/uploads/2015/08/mac-fix-dont-load.jpg';\n            }\n            return (\n              <Link\n                className={s.movieItems}\n                key={movie.id}\n                to={`${movie.id}`}\n                state={{ from: location }}\n              >\n                <img src={posterPath} width=\"400\" alt={movie.title} />\n                <h2 className={s.movie_title}>{movie.title}</h2>\n              </Link>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["location","useLocation","useState","movies","setMovies","input","setInput","useSearchParams","searchParam","setSearchParam","inputEle","get","useEffect","fetchSearch","results","length","Notiflix","fetch","className","s","onSubmit","e","preventDefault","query","placeholder","type","name","onChange","value","currentTarget","toLowerCase","map","movie","posterPath","poster_path","to","id","state","from","src","width","alt","title"],"sourceRoot":""}